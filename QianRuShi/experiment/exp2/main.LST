C51 COMPILER V7.50   MAIN                                                                  05/13/2012 22:56:12 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<REG52.H>
   2          #include<intrins.h>
   3          
   4          //Global define switches to control the program behavior to satified the needs.
   5          #define USE_MODULE1 1 
   6          #define USE_MODULE2 0
   7          #define USE_MODULE3 0
   8          
   9          #if ( USE_MODULE1 + USE_MODULE2 + USE_MODULE3 ) > 1 || ( USE_MODULE1 + USE_MODULE2 + USE_MODULE3 ) == 0
              #error "error of switches. Try to modify the USE_MODULE1 or USE_MODULE2 or USE_MODULE3" //only 001 010 100
             - is acceptable
              #endif
  12          
  13          
  14          #define LED_PORT1 P1
  15          
  16          
  17          //delay function, no timer engaged which means it's inaccurate.
  18          void delay( unsigned int ucMs );
  19          
  20          
  21          //module 1 entrance
  22          #if USE_MODULE1
  23          
  24          #define DEAY_MS 150
  25          
  26          int main( void )
  27          {
  28   1      
  29   1              unsigned char cycle;
  30   1              unsigned char ledStatus;
  31   1      
  32   1              //choose the external trigger mode
  33   1              IT1 = 0; //Can we use bit addressing? It's 88H. Now that int0 int1 are edage trigger
  34   1              IT0 = 1; //Try it. Man
  35   1      
  36   1              //external interrupt enable
  37   1              EX0 = 1; //external 0 allowed
  38   1              EX1 = 1; //external 1 allowed
  39   1      
  40   1              //global interrupt enable
  41   1              EA = 1;  //Global interrupt on!
  42   1      
  43   1              //initial off all the leds
  44   1              P0 = 0xFF;
  45   1              P2 = 0xFF;
  46   1              LED_PORT1 = 0xFF;
  47   1      
  48   1              while( 1 )
  49   1              {
  50   2                      ledStatus = 0x01;
  51   2                      LED_PORT1 = ~ledStatus;
  52   2                      delay( DEAY_MS );
  53   2      
  54   2                      for( cycle=1 ; cycle<8 ; cycle++ )
C51 COMPILER V7.50   MAIN                                                                  05/13/2012 22:56:12 PAGE 2   

  55   2                      {
  56   3                              ledStatus <<=1;
  57   3                              LED_PORT1 =~ledStatus;
  58   3                              delay( DEAY_MS );
  59   3                      }
  60   2      
  61   2              }
  62   1      
  63   1      
  64   1              return 0;
  65   1      }
  66          
  67          #endif
  68          
  69          
  70          //module 2 entrance
  71          #if USE_MODULE2
              
              #define DEAY_MS 250
              
              volatile bit mode;                  //evil global variable, indicate the mode we use here
              volatile unsigned long ledStatus;   //We handle with care, But is there a risk of race like that in Operat
             -on System?
              
              int main( void )
              {
                      //choose the external trigger mode
                      //Can we use bit addressing? It's 88H. Now that int0 edage trigger
                      IT0 = 1; //Try it. Man
              
                      //external interrupt enable
                      EX0 = 1; //external 0 allowed
              
                      //global interrupt enable
                      EA = 1;  //Global interrupt on!
                      
              
                      //initial off all the leds
                      P0 = 0xFF;
                      P2 = 0xFF;
                      LED_PORT1 = 0xFF;
              
                      ledStatus = 0x01;
                      mode = 0;
                      LED_PORT1 = ~ledStatus;
                      delay( DEAY_MS );
              
                      while( 1 )
                      {
                          ledStatus = _crol_( ledStatus , 1 + ( unsigned char )mode );          //C51 libary provide a lot of useful f
             -unction. Shall Google it...
                              LED_PORT1 =~ledStatus;
                              delay( DEAY_MS );
                      }
              
                      return 0;
              }
              
              #endif
 112          
 113          
 114          #if USE_MODULE3
C51 COMPILER V7.50   MAIN                                                                  05/13/2012 22:56:12 PAGE 3   

              
              #define DEAY_MS 180
              
              
              volatile unsigned char ledStatus;    //change the ledStatus
              volatile mode;                       //has been interrupted?
              
              int main( void )
              {
              
                      unsigned char cycle;
              
                      //off all the leds
                      P0 = 0xFF;
                      P2 = 0xFF;
                      LED_PORT1 = 0xFF;
              
                      //choose the external trigger mode
                      //Can we use bit addressing? It's 88H. Now that int1 edage trigger
                      IT1 = 1; //Try it. Man
              
                      //external interrupt enable
                      EX1 = 1; //external 1 allowed
              
                      //global interrupt enable
                      EA = 1;  //Global interrupt on!
              
                      mode = 0;
              
                      while( 1 )
                      {
                              if( ! mode )
                              {
                                      ledStatus = 0xFF;
                                      P0 = 0xFF;
                                      P2 = 0xFF;
              
                                      LED_PORT1 = ~ledStatus;
                                      delay( DEAY_MS );
              
                                      for( cycle=0 ; cycle < 8 ; cycle++ )
                                      {
                                              ledStatus >>= 1;
                                              LED_PORT1 = ~ledStatus;
                                              delay( DEAY_MS );
                                      }
                              }
                              else{
              
                                      ledStatus = 0x03;
                                      LED_PORT1 = ~ledStatus;
                                      P0 = 0xF0;
                                      P2 = 0xFF;
                                      delay( DEAY_MS );
              
                                      for( cycle=0 ; cycle < 4 ; cycle++ )
                                      {
                                              ledStatus <<=2;
              
                                              LED_PORT1 = ~ledStatus;
                                              P0 = ~P0;
                                              P2 = ~P2;
C51 COMPILER V7.50   MAIN                                                                  05/13/2012 22:56:12 PAGE 4   

                                              delay( DEAY_MS );
                                      }
              
              
                              }
              
                      }
              
              
                      return 0;
              
              }
              
              #endif
 191                  
 192          
 193          
 194          #if USE_MODULE1
 195          
 196          //external 0 interrupt edge trigger no need to clear the interrupt bit
 197          void ext0( void ) interrupt 0
 198          {
 199   1          unsigned char c;
 200   1      
 201   1              EA = 0; //no interrupt me
 202   1      
 203   1              for( c=0 ; c<3 ; c++ )
 204   1              {
 205   2                      P0 = 0xF0;
 206   2                      delay( DEAY_MS );
 207   2                      P0 = 0xFF;
 208   2                      delay( DEAY_MS );
 209   2              }
 210   1              
 211   1              EA = 1; //interrupt on
 212   1      }
 213          
 214          //external 1 interrupt level trigger no much we can do if the levle is still on 
 215          void ext1( void ) interrupt 2
 216          {
 217   1              unsigned char c;
 218   1      
 219   1              EA = 0; //no interrupt me
 220   1      
 221   1              for( c=0 ; c<6 ; c++ )
 222   1              {
 223   2                      P2 = 0xF0;
 224   2                      delay( 50 );
 225   2                      P2 = 0xFF;
 226   2                      delay( DEAY_MS );
 227   2      
 228   2              }
 229   1      
 230   1      
 231   1              EA = 1; //interrupt on
 232   1      }
 233          
 234          #endif
 235          
 236          #if USE_MODULE2
              
              //external 0 interrupt edge trigger no need to clear the interrupt bit
C51 COMPILER V7.50   MAIN                                                                  05/13/2012 22:56:12 PAGE 5   

              void etx0( void ) interrupt 0
              {
                      EA = 0; //no interrupt me
              
                      if( mode )   // mode == 1 means current is two leds, next status one led
                      {
                              ledStatus = ledStatus & _crol_( ledStatus , 1 ) ;      //must use the  char rotate in a circle style
                      }
                      else         // mode == 0 means current is one led, next status two leds
                      {
                              ledStatus = ledStatus | _crol_( ledStatus , 1 ) ;      //must use the char rotate to get a circle
                      }
              
                      mode = ~mode;
              
                      EA = 1; //global interrupt on again
              }
              
              #endif
 258          
 259          
 260          #if USE_MODULE3
              
              //external 1 interrupt edge trigger no need to clear the interrupt bit
              void ext1( void ) interrupt 2
              {
                      EA = 0; //global interrupt off
              
                      mode = ~mode;
              
                      EA = 1; //global interrupt on
              }
              
              #endif
 273          
 274          
 275          //a delay function
 276          void delay( unsigned int ucMs )
 277          {
 278   1      //running at 11.0592MHz ?
 279   1      #define DELAYTIMES 239 
 280   1      
 281   1              unsigned char ucCounter;
 282   1      
 283   1              while( ucMs != 0 )
 284   1              {
 285   2                      for( ucCounter=0; ucCounter < DELAYTIMES ; ucCounter ++ ){}
 286   2                      ucMs--;
 287   2              }
 288   1      }
 289          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    247    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V7.50   MAIN                                                                  05/13/2012 22:56:12 PAGE 6   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
