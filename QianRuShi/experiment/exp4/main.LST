C51 COMPILER V7.50   MAIN                                                                  05/13/2012 23:38:32 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<REG52.H>
   2          #include<IMSutil.h>
   3          
   4          #define RUNNING_BASKETBALL_COUNTER 0
   5          #define COUNTER_1MS 1
   6          
   7          
   8          #if ( ( RUNNING_BASKETBALL_COUNTER + COUNTER_1MS ) != 1 )
              #error "Error Configure, Check line 4/5"
              #endif
  11          
  12          #if RUNNING_BASKETBALL_COUNTER
              
              #define MINUTE_LED P3
              #define SECOND_LED P2
              #define MICRO_10MS_LED P1
              
              #define KEY_FILTER_MS 2
              #define RUNNING_INITIAL_10MS 0  
              #define BASKETBALL_ROUND_TIMEUP_10MS 72000
              
              sbit bStart = P0^0;
              sbit bPauseContinue = P0^1;
              sbit outPut = P0^7;
              bit running;
              
              sbit bClear = P0^2;
              sbit bExit = P0^3;
              
              //unsigned long is 32 bit...good
              volatile unsigned long currentTicksIn10ms;
              volatile bit basketball;
              
              //set the timer 2 interrupt at every 10ms
              void setTimer2_10ms( void );
              
              //update the 7-SEG led using the global ticks
              void update7SEG( void );
              
              int main( void )
              {
                      running = 0;
                      outPut = 1;
                      basketball = 0;
              
                      if( !basketball )
                              currentTicksIn10ms = RUNNING_INITIAL_10MS;
                      else
                              currentTicksIn10ms = BASKETBALL_ROUND_TIMEUP_10MS;
              
                      update7SEG();
              
                      setTimer2_10ms();
              
                      EA = 1;
C51 COMPILER V7.50   MAIN                                                                  05/13/2012 23:38:32 PAGE 2   

                      while( 1 )
                      {
                              if( ! bStart )
                              {
                                      delay_ms( KEY_FILTER_MS );
                                      if( ! bStart ) //the button is on !!
                                      {
                                              while( ! bStart );
                                              running = 1;
                                      }
                              }
              
                              if( ! bPauseContinue )
                              {
                                      delay_ms( KEY_FILTER_MS );
                                      if( ! bPauseContinue ) //the button is on !!
                                      {
                                              while( ! bPauseContinue );
                                              running = ~running;
                                      }
                              }
              
                              if( ! bClear )
                              {
                                      delay_ms( KEY_FILTER_MS );
                                      if( ! bClear ) //the button is on !!
                                      {
                                              EA = 0;
                                              while( ! bClear );
              
                                              if( !basketball )
                                                      currentTicksIn10ms = RUNNING_INITIAL_10MS;
                                              else
                                                      currentTicksIn10ms = BASKETBALL_ROUND_TIMEUP_10MS;
                                              
                                              update7SEG();
                                              EA = 1;
                                      }
                              }
              
                              if( ! bExit )
                              {
                                      delay_ms( KEY_FILTER_MS );
                                      if( ! bExit )
                                      {
                                              EA = 0;
                                              while( ! bExit );
              
                                              if( !basketball )
                                              {
                                                      basketball = 1;
                                                      currentTicksIn10ms = BASKETBALL_ROUND_TIMEUP_10MS;
                                              }
                                              else
                                              {
                                                      basketball = 0;
                                                      currentTicksIn10ms = RUNNING_INITIAL_10MS;
                                              }
                                              update7SEG();
                                              EA = 1;
                                      }
                              }
C51 COMPILER V7.50   MAIN                                                                  05/13/2012 23:38:32 PAGE 3   

                      }
                      
                      return 0;
              }
              
              //timer 2 interrupt routine
              void timer2Interrupt( void ) interrupt 5
              {
                      EA = 0;
                      TF2 = 0;
              
                      if( running )
                      {
                              if( !basketball )
                                      currentTicksIn10ms++;
                              else
                                      currentTicksIn10ms--;
              
                              update7SEG();
                      }
                      
                      outPut = ~outPut;
                      EA = 1;
              }
              
              //set the timer 
              void setTimer2_10ms( void )
              {
                      T2CON = 0x00;
                      TH2 = RCAP2H = 0xD8 ;   //run at 12MHz at 1us percycle 65536 - 10000 
                      TL2 = RCAP2L = 0xF0 ;
              
                      ET2 = 1;  //enable the timer 2 interrupt
                      TR2 = 1;  //start the timer     
              }
              
              void update7SEG( void )
              {
                      unsigned long min;   //if i don't use the long it will fail me, trust me. why??? It seem it use the 2Byte
             - int to minus
                      unsigned long sec;
                      unsigned long ms10;
              
                      min = currentTicksIn10ms / ( 1 * 60 * 100 );
                      sec =( currentTicksIn10ms - ( 1 * 60 * 100 * min ) ) / ( 100 );
                      ms10 = currentTicksIn10ms - ( 1 * 60 * 100 * min ) - 100 * sec;
              
                      MINUTE_LED = char2BCD( min );
                      SECOND_LED = char2BCD( sec );
                      MICRO_10MS_LED = char2BCD( ms10 ); 
              
              }
              
              #endif 
 171          
 172          #if COUNTER_1MS 
 173          //running at counter mode can count up and count down
 174          
 175          #define KEY_FILTER_MS 0
 176          
 177          #define SECOND_LED P3
 178          #define MICRO_100MS_LED P2
C51 COMPILER V7.50   MAIN                                                                  05/13/2012 23:38:32 PAGE 4   

 179          #define MICRO_1MS_LED P1
 180          
 181          #define UP_INITIAL_1MS 0
 182          #define DOWN_INITIAL_1MS ( 0x1869F )
 183          
 184          sbit bStart = P0^0;                             //start button
 185          sbit bPauseContinue = P0^1;     //Pause Continue button
 186          sbit outPut = P0^7;             //outPut pluse output port
 187          bit running;                                    //indicate it's on running status or stopped status
 188          
 189          sbit bClear = P0^2;             //clear button 
 190          sbit bExit = P0^3;                              //mode switch button
 191          
 192          //unsigned long is 32 bit...good
 193          volatile unsigned long currentTicksIn1ms;
 194          volatile bit up;
 195          
 196          void setTimer2_1ms( void );
 197          void update7SEG( void );
 198          
 199          int main( void )
 200          {
 201   1      
 202   1              running = 0;
 203   1              up = 0;
 204   1      
 205   1              if( !up )
 206   1                      currentTicksIn1ms = DOWN_INITIAL_1MS;
 207   1              else
 208   1                      currentTicksIn1ms = UP_INITIAL_1MS;
 209   1      
 210   1              update7SEG();
 211   1              
 212   1              setTimer2_1ms();
 213   1      
 214   1              EA = 1;
 215   1              while( 1 )
 216   1              {
 217   2                      if( ! bStart )
 218   2                      {
 219   3                              delay_ms( KEY_FILTER_MS );
 220   3                              if( ! bStart ) //the button is on !!
 221   3                              {
 222   4                                      while( ! bStart );
 223   4                                      running = 1;
 224   4                              }
 225   3                      }
 226   2      
 227   2                      if( ! bPauseContinue )
 228   2                      {
 229   3                              delay_ms( KEY_FILTER_MS );
 230   3                              if( ! bPauseContinue ) //the button is on !!
 231   3                              {
 232   4                                      while( ! bPauseContinue );
 233   4                                      running = ~running;
 234   4                              }
 235   3                      }
 236   2      
 237   2                      if( ! bClear )
 238   2                      {
 239   3                              delay_ms( KEY_FILTER_MS );
 240   3                              if( ! bClear ) //the button is on !!
C51 COMPILER V7.50   MAIN                                                                  05/13/2012 23:38:32 PAGE 5   

 241   3                              {
 242   4                                      EA = 0;
 243   4                                      while( ! bClear );
 244   4      
 245   4                                      if( !up )
 246   4                                              currentTicksIn1ms = DOWN_INITIAL_1MS;
 247   4                                      else
 248   4                                              currentTicksIn1ms = UP_INITIAL_1MS;
 249   4                                      
 250   4                                      update7SEG();
 251   4                                      EA = 1;
 252   4                              }
 253   3                      }
 254   2      
 255   2                      if( ! bExit )
 256   2                      {
 257   3                              delay_ms( KEY_FILTER_MS );
 258   3                              if( ! bExit )
 259   3                              {
 260   4                                      EA = 0;
 261   4                                      while( ! bExit );
 262   4      
 263   4                                      if( !up )
 264   4                                      {
 265   5                                              up = 1;
 266   5                                              currentTicksIn1ms = UP_INITIAL_1MS;
 267   5                                      }
 268   4                                      else
 269   4                                      {
 270   5                                              up = 0;
 271   5                                              currentTicksIn1ms = DOWN_INITIAL_1MS; 
 272   5                                      }
 273   4                                      update7SEG();
 274   4                                      EA = 1;
 275   4                              }
 276   3                      }
 277   2      
 278   2      
 279   2              }
 280   1      
 281   1      
 282   1              return 0;
 283   1      }
 284          
 285          //timer2 overflow interrupt handler(routine)
 286          void timer2Interrupt( void ) interrupt 5
 287          {
 288   1              EA = 0;
 289   1              TF2 = 0;
 290   1              
 291   1              if( running )
 292   1              {
 293   2                      if( up )
 294   2                      {
 295   3                              currentTicksIn1ms++;
 296   3                      }
 297   2                      else
 298   2                      {
 299   3                              currentTicksIn1ms--;
 300   3                      }
 301   2      
 302   2                      update7SEG();
C51 COMPILER V7.50   MAIN                                                                  05/13/2012 23:38:32 PAGE 6   

 303   2              }
 304   1      
 305   1              outPut = ~outPut;
 306   1              EA = 1;
 307   1      }
 308          
 309          //set the timer2 interrupt every 1ms  
 310          void setTimer2_1ms( void )
 311          {
 312   1              T2CON = 0x00;
 313   1              TH2 = RCAP2H = 0xFC ;   //run at 12MHz at 1us percycle 65536 - 1000 
 314   1              TL2 = RCAP2L = 0x18 ;
 315   1      
 316   1              ET2 = 1;  //enable the timer 2 interrupt
 317   1              TR2 = 1;  //start the timer     
 318   1      }
 319          
 320          void update7SEG( void )
 321          {
 322   1              unsigned long sec;   //if i don't use the long it will fail me, trust me. why??? It seem it use the 2Byte
             - int to minus
 323   1              unsigned long ms1;
 324   1      
 325   1              sec = currentTicksIn1ms / ( 1000 );
 326   1              ms1 = currentTicksIn1ms - sec*1000 ;
 327   1      
 328   1              SECOND_LED = char2BCD( sec );              //this piece of code run up to 5ms????? it's unusal
 329   1              MICRO_1MS_LED = char2BCD( ms1 % 100 );
 330   1              MICRO_100MS_LED = char2BCD( ms1 / 100 );                
 331   1              
 332   1      }
 333          
 334          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    594    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
