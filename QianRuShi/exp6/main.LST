C51 COMPILER V7.50   MAIN                                                                  05/04/2012 16:05:49 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<REG52.H>
   2          #include<IMSutil.h>
   3          #include<stdio.h>
   4          
   5          //Command Mode
   6          //CMD LEN DATA
   7          
   8          #define READ_PORT_STATUS 0x0A
   9          #define REC_OK_EXC_OK 0x00
  10          #define REC_OK_EXC_FI 0x01
  11          #define SET_PORT_STATUS 0x06
  12          #define NUM_PORT P1
  13          
  14          #define INPUT_PORT P0
  15          #define OUT_PORT P2
  16          
  17          typedef struct 
  18          {
  19                  unsigned char cmd;
  20                  unsigned char len;
  21                  unsigned char cData[2];
  22          }Potocol;
  23          
  24          
  25          //initial uart run at 19200 baud @11.0592Mhz
  26          void ini_Uart( void );
  27          
  28          //send a byte
  29          void sendByte( unsigned char b );
  30          
  31          int main( void )
  32          {
  33   1              ini_Uart();
  34   1      
  35   1              EA = 0;
  36   1              ES = 0;
  37   1              //say hello to host and my num
  38   1              //printf("Hello, I am %u, Ready!\n", num );
  39   1      
  40   1              ES = 1;
  41   1              TI = 0;
  42   1              RI = 0;
  43   1              EA = 1;
  44   1      
  45   1              while( 1 );
  46   1      
  47   1              return 0;
  48   1      }
  49          
  50          void usarInterrupt( void ) interrupt 4
  51          {
  52   1              Potocol obj;
  53   1              unsigned char cnt;
  54   1      
  55   1              EA = 0;
C51 COMPILER V7.50   MAIN                                                                  05/04/2012 16:05:49 PAGE 2   

  56   1      
  57   1              //only receive interrupt will be here
  58   1              obj.cmd = SBUF;
  59   1              RI = 0;
  60   1              TI = 0;
  61   1      
  62   1              while( ! RI );
  63   1      
  64   1              obj.len = SBUF;
  65   1              RI = 0;
  66   1              TI = 0;
  67   1      
  68   1              for( cnt=0 ; cnt<obj.len ; cnt++ )
  69   1              {       
  70   2                      while( !RI );
  71   2                      obj.cData[cnt]=SBUF;
  72   2                      RI = 0;
  73   2                      TI = 0;
  74   2              }
  75   1      
  76   1              //total command receive complete
  77   1              if( obj.cmd == READ_PORT_STATUS )
  78   1              {
  79   2                      if( obj.cData[0] == NUM_PORT ) //my num
  80   2                      {
  81   3                              sendByte( REC_OK_EXC_OK );
  82   3                              sendByte( 2 );
  83   3                              sendByte( INPUT_PORT );
  84   3                              sendByte( OUT_PORT );
  85   3                      }
  86   2              }
  87   1              else if( obj.cmd == SET_PORT_STATUS )
  88   1              {
  89   2                      if( obj.cData[0] == NUM_PORT )
  90   2                      {
  91   3                              OUT_PORT = obj.cData[1];
  92   3                              sendByte( REC_OK_EXC_OK );
  93   3                              sendByte( 0 );
  94   3                      }
  95   2              }
  96   1              else
  97   1              {
  98   2                      //unknown command
  99   2                      if( obj.cData[0] == NUM_PORT )
 100   2                      {
 101   3                              sendByte( REC_OK_EXC_FI );
 102   3                              sendByte( 0 );
 103   3                      }
 104   2              }
 105   1              RI = 0;
 106   1              TI = 0;
 107   1              
 108   1              EA = 1;
 109   1      }
 110          
 111          //send a byte
 112          void sendByte( unsigned char b )
 113          {
 114   1              TI = 0;
 115   1              SBUF = b;
 116   1              while( !TI );
 117   1              TI = 0;
C51 COMPILER V7.50   MAIN                                                                  05/04/2012 16:05:49 PAGE 3   

 118   1      }
 119          
 120          //initial uart run at 19200 baud @11.0592Mhz //use the time1 to generage baud
 121          void ini_Uart( void )
 122          {
 123   1              TMOD = 0x20;
 124   1              PCON = 0x80;    
 125   1              TH1 = TL1 = 0xFD;
 126   1              TR1 = 1;
 127   1      
 128   1              SCON = 0x50;
 129   1              TI = 1;
 130   1      }
 131          
 132          
 133          
 134          #if 0
              
              #include<REG52.H>
              #include<IMSutil.h>
              #include<string.h>
              
              int main( void )
              {
                      char *s;
                      s = "Hello IMS!";
                      
                      //use the timer 1 to go
                      //run at 19200 baud
                      TMOD = 0x20;
                      PCON = 0x80;    
                      TH1 = TL1 = 0xFD;
                      TR1 = 1;
              
                      SM0 =0;
                      SM1 =1;
              
                      while( 1 )
                      {
                              unsigned char c;
                              unsigned char l;
                              l = strlen(s); 
                              for( c=0 ; c<l ; c++ )
                              {
                                      SBUF = s[c];
                                      while( !TI );
                                      TI = 0;
                              }
              
                              delay_uc( 520 );
              
                      }
              
                      return 0;
              }
              
              #endif
 175          
 176          
 177          
 178          #if 0  
              //This is a little program to test to compim componet we should search the net and find out that use the c
C51 COMPILER V7.50   MAIN                                                                  05/04/2012 16:05:49 PAGE 4   

             -ompim + virtual serial com drive + com assiatant
              //So that the machine in the proteus can commucate with the host computer using the com map
              
              #include<REG52.H>
              #include<stdio.h>
              #include<IMSutil.h>
              
              void initUart( void );
              
              
              int main( void )
              {
                      initUart();
                      while( 1 )
                      {
                              delay_uc( 1000 );
                              printf("Hello IMS!\n");
                      }
                      
                      return 0;
              }
              
              void initUart( void )
              {
                      SCON = 0x50;
                      TMOD |= 0x20;
                      TH1 = 0xFD;
                      TR1 = 1;
                      TI = 1;
              }
              
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    218    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
