C51 COMPILER V7.50   MAIN                                                                  04/18/2012 12:31:43 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<REG52.H>
   2          #include<intrins.h>
   3          
   4          //Global define switches to control the program behavior to satified the needs.
   5          #define USE_MODULE1 0 
   6          #define USE_MODULE2 0
   7          #define USE_MODULE3 1
   8          
   9          #if ( USE_MODULE1 + USE_MODULE2 + USE_MODULE3 ) > 1 || ( USE_MODULE1 + USE_MODULE2 + USE_MODULE3 ) == 0
              #error "error of switches. Try to modify the USE_MODULE1 or USE_MODULE2 or USE_MODULE3" //only 001 010 100
             - is acceptable
              #endif
  12          
  13          
  14          #define LED_PORT1 P1
  15          
  16          
  17          //delay function, no timer engaged which means it's inaccurate.
  18          void delay( unsigned int ucMs );
  19          
  20          
  21          //module 1 entrance
  22          #if USE_MODULE1
              
              #define DEAY_MS 150
              
              int main( void )
              {
              
                      unsigned char cycle;
                      unsigned char ledStatus;
              
                      //choose the external trigger mode
                      IT1 = 0; //Can we use bit addressing? It's 88H. Now that int0 int1 are edage trigger
                      IT0 = 1; //Try it. Man
              
                      //external interrupt enable
                      EX0 = 1; //external 0 allowed
                      EX1 = 1; //external 1 allowed
              
                      //global interrupt enable
                      EA = 1;  //Global interrupt on!
              
                      //initial off all the leds
                      P0 = 0xFF;
                      P2 = 0xFF;
                      LED_PORT1 = 0xFF;
              
                      while( 1 )
                      {
                              ledStatus = 0x01;
                              LED_PORT1 = ~ledStatus;
                              delay( DEAY_MS );
              
                              for( cycle=1 ; cycle<8 ; cycle++ )
C51 COMPILER V7.50   MAIN                                                                  04/18/2012 12:31:43 PAGE 2   

                              {
                                      ledStatus <<=1;
                                      LED_PORT1 =~ledStatus;
                                      delay( DEAY_MS );
                              }
              
                      }
              
              
                      return 0;
              }
              
              #endif
  68          
  69          
  70          //module 2 entrance
  71          #if USE_MODULE2
              
              #define DEAY_MS 250
              
              volatile bit mode;                  //evil global variable, indicate the mode we use here
              volatile unsigned long ledStatus;   //We handle with care, But is there a risk of race like that in Operat
             -on System?
              
              int main( void )
              {
                      //choose the external trigger mode
                      //Can we use bit addressing? It's 88H. Now that int0 edage trigger
                      IT0 = 1; //Try it. Man
              
                      //external interrupt enable
                      EX0 = 1; //external 0 allowed
              
                      //global interrupt enable
                      EA = 1;  //Global interrupt on!
                      
              
                      //initial off all the leds
                      P0 = 0xFF;
                      P2 = 0xFF;
                      LED_PORT1 = 0xFF;
              
                      ledStatus = 0x01;
                      mode = 0;
                      LED_PORT1 = ~ledStatus;
                      delay( DEAY_MS );
              
                      while( 1 )
                      {
                          ledStatus = _crol_( ledStatus , 1 + ( unsigned char )mode );          //C51 libary provide a lot of useful f
             -unction. Shall Google it...
                              LED_PORT1 =~ledStatus;
                              delay( DEAY_MS );
                      }
              
                      return 0;
              }
              
              #endif
 112          
 113          
 114          #if USE_MODULE3
C51 COMPILER V7.50   MAIN                                                                  04/18/2012 12:31:43 PAGE 3   

 115          
 116          #define DEAY_MS 180
 117          
 118          
 119          volatile unsigned char ledStatus;    //change the ledStatus
 120          volatile mode;                       //has been interrupted?
 121          
 122          int main( void )
 123          {
 124   1      
 125   1              unsigned char cycle;
 126   1      
 127   1              //off all the leds
 128   1              P0 = 0xFF;
 129   1              P2 = 0xFF;
 130   1              LED_PORT1 = 0xFF;
 131   1      
 132   1              //choose the external trigger mode
 133   1              //Can we use bit addressing? It's 88H. Now that int1 edage trigger
 134   1              IT1 = 1; //Try it. Man
 135   1      
 136   1              //external interrupt enable
 137   1              EX1 = 1; //external 1 allowed
 138   1      
 139   1              //global interrupt enable
 140   1              EA = 1;  //Global interrupt on!
 141   1      
 142   1              mode = 0;
 143   1      
 144   1              while( 1 )
 145   1              {
 146   2                      if( ! mode )
 147   2                      {
 148   3                              ledStatus = 0xFF;
 149   3                              P0 = 0xFF;
 150   3                              P2 = 0xFF;
 151   3      
 152   3                              LED_PORT1 = ~ledStatus;
 153   3                              delay( DEAY_MS );
 154   3      
 155   3                              for( cycle=0 ; cycle < 8 ; cycle++ )
 156   3                              {
 157   4                                      ledStatus >>= 1;
 158   4                                      LED_PORT1 = ~ledStatus;
 159   4                                      delay( DEAY_MS );
 160   4                              }
 161   3                      }
 162   2                      else{
 163   3      
 164   3                              ledStatus = 0x03;
 165   3                              LED_PORT1 = ~ledStatus;
 166   3                              P0 = 0xF0;
 167   3                              P2 = 0xFF;
 168   3                              delay( DEAY_MS );
 169   3      
 170   3                              for( cycle=0 ; cycle < 4 ; cycle++ )
 171   3                              {
 172   4                                      ledStatus <<=2;
 173   4      
 174   4                                      LED_PORT1 = ~ledStatus;
 175   4                                      P0 = ~P0;
 176   4                                      P2 = ~P2;
C51 COMPILER V7.50   MAIN                                                                  04/18/2012 12:31:43 PAGE 4   

 177   4                                      delay( DEAY_MS );
 178   4                              }
 179   3      
 180   3      
 181   3                      }
 182   2      
 183   2              }
 184   1      
 185   1      
 186   1              return 0;
 187   1      
 188   1      }
 189          
 190          #endif
 191                  
 192          
 193          
 194          #if USE_MODULE1
              
              //external 0 interrupt edge trigger no need to clear the interrupt bit
              void ext0( void ) interrupt 0
              {
                  unsigned char c;
              
                      EA = 0; //no interrupt me
              
                      for( c=0 ; c<3 ; c++ )
                      {
                              P0 = 0xF0;
                              delay( DEAY_MS );
                              P0 = 0xFF;
                              delay( DEAY_MS );
                      }
                      
                      EA = 1; //interrupt on
              }
              
              //external 1 interrupt level trigger no much we can do if the levle is still on 
              void ext1( void ) interrupt 2
              {
                      unsigned char c;
              
                      EA = 0; //no interrupt me
              
                      for( c=0 ; c<6 ; c++ )
                      {
                              P2 = 0xF0;
                              delay( 50 );
                              P2 = 0xFF;
                              delay( DEAY_MS );
              
                      }
              
              
                      EA = 1; //interrupt on
              }
              
              #endif
 235          
 236          #if USE_MODULE2
              
              //external 0 interrupt edge trigger no need to clear the interrupt bit
C51 COMPILER V7.50   MAIN                                                                  04/18/2012 12:31:43 PAGE 5   

              void etx0( void ) interrupt 0
              {
                      EA = 0; //no interrupt me
              
                      if( mode )   // mode == 1 means current is two leds, next status one led
                      {
                              ledStatus = ledStatus & _crol_( ledStatus , 1 ) ;      //must use the  char rotate in a circle style
                      }
                      else         // mode == 0 means current is one led, next status two leds
                      {
                              ledStatus = ledStatus | _crol_( ledStatus , 1 ) ;      //must use the char rotate to get a circle
                      }
              
                      mode = ~mode;
              
                      EA = 1; //global interrupt on again
              }
              
              #endif
 258          
 259          
 260          #if USE_MODULE3
 261          
 262          //external 1 interrupt edge trigger no need to clear the interrupt bit
 263          void ext1( void ) interrupt 2
 264          {
 265   1              EA = 0; //global interrupt off
 266   1      
 267   1              mode = ~mode;
 268   1      
 269   1              EA = 1; //global interrupt on
 270   1      }
 271          
 272          #endif
 273          
 274          
 275          //a delay function
 276          void delay( unsigned int ucMs )
 277          {
 278   1      //running at 11.0592MHz ?
 279   1      #define DELAYTIMES 239 
 280   1      
 281   1              unsigned char ucCounter;
 282   1      
 283   1              while( ucMs != 0 )
 284   1              {
 285   2                      for( ucCounter=0; ucCounter < DELAYTIMES ; ucCounter ++ ){}
 286   2                      ucMs--;
 287   2              }
 288   1      }
 289          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    152    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V7.50   MAIN                                                                  04/18/2012 12:31:43 PAGE 6   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
